name: "Build Packages"

on:
  workflow_dispatch:
    inputs:
      version:
        description: "The version to release"
        required: true
  pull_request:
    branches: [ "main" ]

jobs:
  build-mac-app:
    name: "Build Mac App"
    runs-on: "macos-latest"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Poetry
        uses: Gr1N/setup-poetry@v9

      - name: Build App
        run: |
          cd viewer && yarn install && yarn deploy && cd ..
          poetry install
          poetry run write-schema-json
          poetry version ${{ inputs.version }}
          echo "VISIVO_VERSION = \"${{ inputs.version }}\"" > visivo/version.py

      - name: Build Mac App
        run: |
          poetry run build

      - name: Upload Mac App Artifact
        uses: actions/upload-artifact@v4
        with:
          name: visivo-mac
          path: dist/visivo


  build-windows-app:
    name: "Build Windows App"
    runs-on: "windows-latest"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Poetry
        uses: Gr1N/setup-poetry@v9

      - name: Build App
        run: |
          cd viewer && yarn install && yarn deploy && cd ..
          poetry install
          poetry run write-schema-json
          poetry version ${{ inputs.version }}
          echo "VISIVO_VERSION = \"${{ inputs.version }}\"" > visivo/version.py

      - name: Build Windows App
        run: |
          poetry run build

      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v4
        with:
          name: visivo-windows
          path: dist/visivo

  build-linux-app:
    name: "Build Linux App"
    runs-on: "ubuntu-latest"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Poetry
        uses: Gr1N/setup-poetry@v9

      - name: Build App
        run: |
          cd viewer && yarn install && yarn deploy && cd ..
          poetry install
          poetry run write-schema-json
          poetry version ${{ inputs.version }}
          echo "VISIVO_VERSION = \"${{ inputs.version }}\"" > visivo/version.py

      - name: Build Linux Bundle
        run: |
          poetry run build

      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v4
        with:
          name: visivo-linux
          path: dist/visivo 