name: Test

on:
  pull_request:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  test-cli:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - uses: Gr1N/setup-poetry@v8 
      
      - name: Install Dependencies
        run: poetry install
      
      - name: Test CLI
        run: poetry run pytest 
        env:
          STACKTRACE: true
  test-viewer:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Test Viewer 
        run: cd viewer && yarn install && yarn test && cd ..
      
  test-rails:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0.2'
          bundler-cache: true
      
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10' 

      - uses: Gr1N/setup-poetry@v8 

      - name: Install CLI Dependencies
        run: poetry install
      
      - name: Install CLI Visivo Package
        run: poetry build && pip install dist/visivo-*-py3-none-any.whl 
      
      - name: Install Dependencies
        run: cd test-projects/ror && bundle install && cd ../..
      
      - name: Test App
        run: cd test-projects/ror && bundle exec rspec && cd ../..
  
  test-snowflake:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10' 

      - uses: Gr1N/setup-poetry@v8 

      - name: Install CLI Dependencies
        run: poetry install
      
      - name: Install CLI Visivo Package
        run: poetry build && pip install dist/visivo-*-py3-none-any.whl 
      
      - name: Test App
        run: |
          cd test-projects/simple-database && visivo run -t remote-snowflake && cd ../..
        env:
          STACKTRACE: true
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          CLI_UNIT_TESTING_SNOWFLAKE_USER: ${{ secrets.CLI_UNIT_TESTING_SNOWFLAKE_USER }}
          CLI_UNIT_TESTING_SNOWFLAKE_PASSWORD: ${{ secrets.CLI_UNIT_TESTING_SNOWFLAKE_PASSWORD }}
  
  test-postgres:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5434:5432
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10' 
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install pg JS Library
        run: npm install pg 

      - name: Populate Postgres DB Table
        run: node tests/setup/populate_ci_postgres_db.js
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5434
      
      - uses: Gr1N/setup-poetry@v8

      - name: Install CLI Dependencies
        run: poetry install
      
      - name: Install CLI Visivo Package
        run: poetry build && pip install dist/visivo-*-py3-none-any.whl 

      - name: Test Simple Project Run
        run: |
          cd test-projects/simple-database && visivo run -t local-postgres --threads 1 && cd ../..
        env:
          PG_PASSWORD: postgres

  
  test-complex-project:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10' 

      - uses: Gr1N/setup-poetry@v8 

      - name: Install CLI Dependencies
        run: poetry install
      
      - name: Install CLI Visivo Package
        run: poetry build && pip install dist/visivo-*-py3-none-any.whl 
      
      - name: Test App
        run: |
          cd test-projects/complex-project && visivo run && cd ../..
        env:
          STACKTRACE: true
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          CLI_UNIT_TESTING_SNOWFLAKE_USER: ${{ secrets.CLI_UNIT_TESTING_SNOWFLAKE_USER }}
          CLI_UNIT_TESTING_SNOWFLAKE_PASSWORD: ${{ secrets.CLI_UNIT_TESTING_SNOWFLAKE_PASSWORD }}