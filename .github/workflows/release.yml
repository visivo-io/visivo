name: "Release"

on:
  workflow_dispatch:
    inputs:
      version:
        description: "The version to release"
        required: true

jobs:
  build-mac-app:
    name: "Build Mac App"
    runs-on: "macos-latest"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Poetry
        uses: Gr1N/setup-poetry@v9

      - name: Build App
        run: |
          cd viewer && yarn install && yarn deploy && cd ..
          poetry install
          poetry run write-schema-json
          poetry version ${{ inputs.version }}
          echo "VISIVO_VERSION = \"${{ inputs.version }}\"" > visivo/version.py

      - name: Build Mac App
        run: |
          poetry run build

      - name: Upload Mac App Artifact
        uses: actions/upload-artifact@v4
        with:
          name: visivo-mac
          path: dist/visivo

  create-release:
    name: "Create release v${{ inputs.version }}"
    runs-on: "ubuntu-latest"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.BYPASS_RULES_TOKEN }}

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Poetry
        uses: Gr1N/setup-poetry@v9

      - name: Build App
        run: |
          cd viewer && yarn install && yarn deploy && cd ..
          poetry install
          poetry run write-schema-json
          poetry version ${{ inputs.version }}
          echo "VISIVO_VERSION = \"${{ inputs.version }}\"" > visivo/version.py

      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          author_name: Visivo
          author_email: info@visivo.io
          message: "Build viewer for Python package"

      - name: Add and push tag
        run: |
          git config --global user.email "info@visivo.io"
          git config --global user.name "Visivo"
          git tag -a "v${{ inputs.version }}" -m "Release v${{ inputs.version }}"
          git push origin tag v${{ inputs.version }}
          git tag -d latest
          git push origin :refs/tags/latest
          git tag -a latest -m "Latest versioned release"
          git push origin tag latest

      - name: Create GitHub release
        run: |
          gh release create "v${{ inputs.version }}" -t "Release v${{ inputs.version }}" --generate-notes 
          gh release create "latest" -t "Latest versioned release" --latest=false --prerelease
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish
        id: publish
        run: |
          poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
          poetry build
          poetry publish



      - name: Trigger Core Deployment
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.CORE_DEPLOY_TOKEN }}
          repository: visivo-io/core
          event-type: visivo-release
