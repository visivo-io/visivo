import { tableColumnsWithDot, tableDataFromCohortData } from './Table';

// Generated by CodiumAI

describe('tableColumnsWithDot', () => {

  // returns columns with accessorKey when table.columns is defined
  it('should return columns with accessorKey when table.columns is defined', () => {
    const table = {
      column_defs: [
        {
          trace_name: "cohort",
          columns: [
            { key: 'name', header: 'Name' },
            { key: 'age', header: 'Age' }
          ]
        }
      ]
    };
    const result = tableColumnsWithDot(table, null, "cohort");
    expect(result).toEqual([
      { accessorKey: 'name', header: 'Name' },
      { accessorKey: 'age', header: 'Age' }
    ]);
  });

  it('should return columns with accessorKey when table.columns without header is defined', () => {
    const table = {
      column_defs: [
        {
          trace_name: "cohort",
          columns: [
            { key: 'name' },
            { key: 'age' }
          ]
        }
      ]
    };
    const result = tableColumnsWithDot(table, null, "cohort");
    expect(result).toEqual([
      { accessorKey: 'name', header: 'name' },
      { accessorKey: 'age', header: 'age' }
    ]);
  });

  it('should handle empty table.columns array correctly', () => {
    const table = {
      column_defs: []
    };
    const result = tableColumnsWithDot(table, null);
    expect(result).toEqual([]);
  });
});


describe('tableDataFromCohortData', () => {
  const exampleData = {
    "traceName": {
      "cohortName": {
        "columns.x_data": [
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "columns.y_data": [
          4,
          -1,
          6,
          -3,
          12,
          -8
        ],
        "props.text": [
          "4",
          "-1",
          "6",
          "-3",
          "12",
          "-8"
        ]
      }
    }
  }
  test('cleaned table data', async () => {
    const columns = [
      { header: "X Data", accessorKey: "columns.x_data" },
      { header: "Y Data", accessorKey: "columns.y_data" }
    ]


    const tableData = tableDataFromCohortData(exampleData["traceName"]["cohortName"], columns)

    expect(tableData).toEqual([
      { "columns_x_data": 1, "columns_y_data": 4 },
      { "columns_x_data": 2, "columns_y_data": -1 },
      { "columns_x_data": 3, "columns_y_data": 6 },
      { "columns_x_data": 4, "columns_y_data": -3 },
      { "columns_x_data": 5, "columns_y_data": 12 },
      { "columns_x_data": 6, "columns_y_data": -8 }
    ])
  })
})