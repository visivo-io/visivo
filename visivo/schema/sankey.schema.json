{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://visivo.io/trace-properties/schema",
  "description": "A schema to validate plotly trace properties",
  "$defs": {
    "color": {
      "type": "string",
      "description": "A valid color in hex, rgb, rgba, hsl, hsv, or named CSS color",
      "oneOf": [
        {
          "pattern": "^#(?:[0-9a-fA-F]{3}|[0-9a-fA-F]{6})$",
          "description": "Hex color (e.g., #d3d3d3 or #fff)"
        },
        {
          "pattern": "^rgb\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*\\)$",
          "description": "RGB color (e.g., rgb(255, 0, 0))"
        },
        {
          "pattern": "^rgba\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(0|1|0?\\.\\d+)\\s*\\)$",
          "description": "RGBA color (e.g., rgba(255, 0, 0, 0.5))"
        },
        {
          "pattern": "^hsl\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%\\s*,\\s*\\d{1,3}%\\s*\\)$",
          "description": "HSL color (e.g., hsl(0, 100%, 50%))"
        },
        {
          "pattern": "^hsv\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%\\s*,\\s*\\d{1,3}%\\s*\\)$",
          "description": "HSV color (e.g., hsv(0, 100%, 100%))"
        },
        {
          "pattern": "^(aliceblue|antiquewhite|aqua|aquamarine|azure|beige|bisque|black|blanchedalmond|blue|blueviolet|brown|burlywood|cadetblue|chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|cyan|darkblue|darkcyan|darkgoldenrod|darkgray|darkgreen|darkgrey|darkkhaki|darkmagenta|darkolivegreen|darkorange|darkorchid|darkred|darksalmon|darkseagreen|darkslateblue|darkslategray|darkslategrey|darkturquoise|darkviolet|deeppink|deepskyblue|dimgray|dimgrey|dodgerblue|firebrick|floralwhite|forestgreen|fuchsia|gainsboro|ghostwhite|gold|goldenrod|gray|green|greenyellow|grey|honeydew|hotpink|indianred|indigo|ivory|khaki|lavender|lavenderblush|lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|lightgoldenrodyellow|lightgray|lightgreen|lightgrey|lightpink|lightsalmon|lightseagreen|lightskyblue|lightslategray|lightslategrey|lightsteelblue|lightyellow|lime|limegreen|linen|magenta|maroon|mediumaquamarine|mediumblue|mediumorchid|mediumpurple|mediumseagreen|mediumslateblue|mediumspringgreen|mediumturquoise|mediumvioletred|midnightblue|mintcream|mistyrose|moccasin|navajowhite|navy|oldlace|olive|olivedrab|orange|orangered|orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|papayawhip|peachpuff|peru|pink|plum|powderblue|purple|rebeccapurple|red|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell|sienna|silver|skyblue|slateblue|slategray|slategrey|snow|springgreen|steelblue|tan|teal|thistle|tomato|turquoise|violet|wheat|white|whitesmoke|yellow|yellowgreen)$",
          "description": "Named CSS color"
        }
      ]
    },
    "colorscale": {
      "description": "A Plotly colorscale either by name or a custom array of [value, color] pairs.",
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "Greys",
            "YlGnBu",
            "Greens",
            "YlOrRd",
            "Bluered",
            "RdBu",
            "Reds",
            "Blues",
            "Picnic",
            "Rainbow",
            "Portland",
            "Jet",
            "Hot",
            "Blackbody",
            "Earth",
            "Electric",
            "Viridis",
            "Cividis"
          ],
          "description": "Predefined Plotly colorscale name"
        },
        {
          "type": "array",
          "items": {
            "type": "array",
            "minItems": 2,
            "maxItems": 2,
            "items": {
              "oneOf": [
                {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 1
                },
                {
                  "$ref": "#/$defs/color"
                }
              ]
            }
          },
          "description": "Custom colorscale as an array of [value, color] pairs"
        }
      ]
    },
    "query-string": {
      "type": "string",
      "description": "A string that will pull the value from the traces query results.",
      "oneOf": [
        {
          "pattern": "^\\?\\{.*\\}$",
          "description": "String in the format ?{ x } where x can be anything"
        },
        {
          "pattern": "^query\\(.*\\)$",
          "description": "String in the format query( x ) where x can be anything"
        },
        {
          "pattern": "^column\\(.*\\)(?:\\[-?\\d+\\])?$",
          "description": "String in the format column( x ) or column( x )[n] where x can be anything and n is a positive or negative number"
        }
      ]
    }
  },
  "type": "object",
  "properties": {
    "type": {
      "const": "sankey"
    },
    "arrangement": {
      "description": "If value is `snap` (the default), the node arrangement is assisted by automatic snapping of elements to preserve space between nodes specified via `nodepad`. If value is `perpendicular`, the nodes can only move along a line perpendicular to the flow. If value is `freeform`, the nodes can freely move on the plane. If value is `fixed`, the nodes are stationary.",
      "oneOf": [
        {
          "$ref": "#/$defs/query-string"
        },
        {
          "enum": [
            "snap",
            "perpendicular",
            "freeform",
            "fixed"
          ],
          "default": "snap"
        }
      ]
    },
    "customdata": {
      "description": "Assigns extra data each datum. This may be useful when listening to hover, click and selection events. Note that, *scatter* traces also appends customdata items in the markers DOM elements",
      "oneOf": [
        {
          "$ref": "#/$defs/query-string"
        },
        {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      ]
    },
    "customdatasrc": {
      "description": "Sets the source reference on Chart Studio Cloud for `customdata`.",
      "type": "string"
    },
    "domain": {
      "type": "object",
      "properties": {
        "column": {
          "description": "If there is a layout grid, use the domain for this column in the grid for this sankey trace .",
          "oneOf": [
            {
              "$ref": "#/$defs/query-string"
            },
            {
              "type": "integer",
              "minimum": 0,
              "default": 0
            }
          ]
        },
        "row": {
          "description": "If there is a layout grid, use the domain for this row in the grid for this sankey trace .",
          "oneOf": [
            {
              "$ref": "#/$defs/query-string"
            },
            {
              "type": "integer",
              "minimum": 0,
              "default": 0
            }
          ]
        },
        "x": {
          "description": "Sets the horizontal domain of this sankey trace (in plot fraction).",
          "oneOf": [
            {
              "$ref": "#/$defs/query-string"
            },
            {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "$ref": "#/$defs/query-string"
                  },
                  {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 1
                  }
                ]
              },
              "minItems": 2,
              "maxItems": 2,
              "default": [
                0,
                1
              ]
            }
          ]
        },
        "y": {
          "description": "Sets the vertical domain of this sankey trace (in plot fraction).",
          "oneOf": [
            {
              "$ref": "#/$defs/query-string"
            },
            {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "$ref": "#/$defs/query-string"
                  },
                  {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 1
                  }
                ]
              },
              "minItems": 2,
              "maxItems": 2,
              "default": [
                0,
                1
              ]
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "hoverinfo": {
      "description": "Determines which trace information appear on hover. If `none` or `skip` are set, no information is displayed upon hovering. But, if `none` is set, click and hover events are still fired. Note that this attribute is superseded by `node.hoverinfo` and `node.hoverinfo` for nodes and links respectively.",
      "oneOf": [
        {
          "$ref": "#/$defs/query-string"
        },
        {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "all",
                "none",
                "skip"
              ]
            },
            {
              "type": "string",
              "pattern": "^()(\\+())*$"
            }
          ],
          "default": "all"
        }
      ]
    },
    "hoverlabel": {
      "type": "object",
      "properties": {
        "align": {
          "description": "Sets the horizontal alignment of the text content within hover label box. Has an effect only if the hover label text spans more two or more lines",
          "oneOf": [
            {
              "oneOf": [
                {
                  "$ref": "#/$defs/query-string"
                },
                {
                  "enum": [
                    "left",
                    "right",
                    "auto"
                  ],
                  "default": "auto"
                }
              ]
            },
            {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "$ref": "#/$defs/query-string"
                  },
                  {
                    "enum": [
                      "left",
                      "right",
                      "auto"
                    ],
                    "default": "auto"
                  }
                ]
              }
            }
          ]
        },
        "alignsrc": {
          "description": "Sets the source reference on Chart Studio Cloud for `align`.",
          "type": "string"
        },
        "bgcolor": {
          "description": "Sets the background color of the hover labels for this trace",
          "oneOf": [
            {
              "oneOf": [
                {
                  "$ref": "#/$defs/query-string"
                },
                {
                  "$ref": "#/$defs/color"
                }
              ]
            },
            {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "$ref": "#/$defs/query-string"
                  },
                  {
                    "$ref": "#/$defs/color"
                  }
                ]
              }
            }
          ]
        },
        "bgcolorsrc": {
          "description": "Sets the source reference on Chart Studio Cloud for `bgcolor`.",
          "type": "string"
        },
        "bordercolor": {
          "description": "Sets the border color of the hover labels for this trace.",
          "oneOf": [
            {
              "oneOf": [
                {
                  "$ref": "#/$defs/query-string"
                },
                {
                  "$ref": "#/$defs/color"
                }
              ]
            },
            {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "$ref": "#/$defs/query-string"
                  },
                  {
                    "$ref": "#/$defs/color"
                  }
                ]
              }
            }
          ]
        },
        "bordercolorsrc": {
          "description": "Sets the source reference on Chart Studio Cloud for `bordercolor`.",
          "type": "string"
        },
        "font": {
          "type": "object",
          "properties": {
            "color": {
              "oneOf": [
                {
                  "oneOf": [
                    {
                      "$ref": "#/$defs/query-string"
                    },
                    {
                      "$ref": "#/$defs/color"
                    }
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/$defs/query-string"
                      },
                      {
                        "$ref": "#/$defs/color"
                      }
                    ]
                  }
                }
              ]
            },
            "colorsrc": {
              "description": "Sets the source reference on Chart Studio Cloud for `color`.",
              "type": "string"
            },
            "family": {
              "description": "HTML font family - the typeface that will be applied by the web browser. The web browser can only apply a font if it is available on the system where it runs. Provide multiple font families, separated by commas, to indicate the order in which to apply fonts if they aren't available.",
              "oneOf": [
                {
                  "pattern": ".*\\S.*$",
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "pattern": ".*\\S.*$",
                    "type": "string"
                  }
                },
                {
                  "$ref": "#/$defs/query-string"
                }
              ]
            },
            "familysrc": {
              "description": "Sets the source reference on Chart Studio Cloud for `family`.",
              "type": "string"
            },
            "lineposition": {
              "description": "Sets the kind of decoration line(s) with text, such as an *under*, *over* or *through* as well as combinations e.g. *under+over*, etc.",
              "oneOf": [
                {
                  "oneOf": [
                    {
                      "$ref": "#/$defs/query-string"
                    },
                    {
                      "oneOf": [
                        {
                          "type": "string",
                          "enum": [
                            "none"
                          ]
                        },
                        {
                          "type": "string",
                          "pattern": "^(under|over|through)(\\+(under|over|through))*$"
                        }
                      ],
                      "default": "none"
                    }
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/$defs/query-string"
                      },
                      {
                        "oneOf": [
                          {
                            "type": "string",
                            "enum": [
                              "none"
                            ]
                          },
                          {
                            "type": "string",
                            "pattern": "^(under|over|through)(\\+(under|over|through))*$"
                          }
                        ],
                        "default": "none"
                      }
                    ]
                  }
                }
              ]
            },
            "linepositionsrc": {
              "description": "Sets the source reference on Chart Studio Cloud for `lineposition`.",
              "type": "string"
            },
            "shadow": {
              "description": "Sets the shape and color of the shadow behind text. *auto* places minimal shadow and applies contrast text font color. See https://developer.mozilla.org/en-US/docs/Web/CSS/text-shadow for additional options.",
              "oneOf": [
                {
                  "default": "none",
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "default": "none",
                    "type": "string"
                  }
                }
              ]
            },
            "shadowsrc": {
              "description": "Sets the source reference on Chart Studio Cloud for `shadow`.",
              "type": "string"
            },
            "size": {
              "oneOf": [
                {
                  "oneOf": [
                    {
                      "$ref": "#/$defs/query-string"
                    },
                    {
                      "type": "number",
                      "minimum": 1
                    }
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/$defs/query-string"
                      },
                      {
                        "type": "number",
                        "minimum": 1
                      }
                    ]
                  }
                }
              ]
            },
            "sizesrc": {
              "description": "Sets the source reference on Chart Studio Cloud for `size`.",
              "type": "string"
            },
            "style": {
              "description": "Sets whether a font should be styled with a normal or italic face from its family.",
              "oneOf": [
                {
                  "oneOf": [
                    {
                      "$ref": "#/$defs/query-string"
                    },
                    {
                      "enum": [
                        "normal",
                        "italic"
                      ],
                      "default": "normal"
                    }
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/$defs/query-string"
                      },
                      {
                        "enum": [
                          "normal",
                          "italic"
                        ],
                        "default": "normal"
                      }
                    ]
                  }
                }
              ]
            },
            "stylesrc": {
              "description": "Sets the source reference on Chart Studio Cloud for `style`.",
              "type": "string"
            },
            "textcase": {
              "description": "Sets capitalization of text. It can be used to make text appear in all-uppercase or all-lowercase, or with each word capitalized.",
              "oneOf": [
                {
                  "oneOf": [
                    {
                      "$ref": "#/$defs/query-string"
                    },
                    {
                      "enum": [
                        "normal",
                        "word caps",
                        "upper",
                        "lower"
                      ],
                      "default": "normal"
                    }
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/$defs/query-string"
                      },
                      {
                        "enum": [
                          "normal",
                          "word caps",
                          "upper",
                          "lower"
                        ],
                        "default": "normal"
                      }
                    ]
                  }
                }
              ]
            },
            "textcasesrc": {
              "description": "Sets the source reference on Chart Studio Cloud for `textcase`.",
              "type": "string"
            },
            "variant": {
              "description": "Sets the variant of the font.",
              "oneOf": [
                {
                  "oneOf": [
                    {
                      "$ref": "#/$defs/query-string"
                    },
                    {
                      "enum": [
                        "normal",
                        "small-caps",
                        "all-small-caps",
                        "all-petite-caps",
                        "petite-caps",
                        "unicase"
                      ],
                      "default": "normal"
                    }
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/$defs/query-string"
                      },
                      {
                        "enum": [
                          "normal",
                          "small-caps",
                          "all-small-caps",
                          "all-petite-caps",
                          "petite-caps",
                          "unicase"
                        ],
                        "default": "normal"
                      }
                    ]
                  }
                }
              ]
            },
            "variantsrc": {
              "description": "Sets the source reference on Chart Studio Cloud for `variant`.",
              "type": "string"
            },
            "weight": {
              "description": "Sets the weight (or boldness) of the font.",
              "oneOf": [
                {
                  "oneOf": [
                    {
                      "$ref": "#/$defs/query-string"
                    },
                    {
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 1000,
                      "default": "normal"
                    }
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/$defs/query-string"
                      },
                      {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 1000,
                        "default": "normal"
                      }
                    ]
                  }
                }
              ]
            },
            "weightsrc": {
              "description": "Sets the source reference on Chart Studio Cloud for `weight`.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "namelength": {
          "description": "Sets the default length (in number of characters) of the trace name in the hover labels for all traces. -1 shows the whole name regardless of length. 0-3 shows the first 0-3 characters, and an integer >3 will show the whole name if it is less than that many characters, but if it is longer, will truncate to `namelength - 3` characters and add an ellipsis.",
          "oneOf": [
            {
              "oneOf": [
                {
                  "$ref": "#/$defs/query-string"
                },
                {
                  "type": "integer",
                  "minimum": -1,
                  "default": 15
                }
              ]
            },
            {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "$ref": "#/$defs/query-string"
                  },
                  {
                    "type": "integer",
                    "minimum": -1,
                    "default": 15
                  }
                ]
              }
            }
          ]
        },
        "namelengthsrc": {
          "description": "Sets the source reference on Chart Studio Cloud for `namelength`.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ids": {
      "description": "Assigns id labels to each datum. These ids for object constancy of data points during animation. Should be an array of strings, not numbers or any other type.",
      "oneOf": [
        {
          "$ref": "#/$defs/query-string"
        },
        {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      ]
    },
    "idssrc": {
      "description": "Sets the source reference on Chart Studio Cloud for `ids`.",
      "type": "string"
    },
    "legend": {
      "description": "Sets the reference to a legend to show this trace in. References to these legends are *legend*, *legend2*, *legend3*, etc. Settings for these legends are set in the layout, under `layout.legend`, `layout.legend2`, etc.",
      "oneOf": [
        {
          "$ref": "#/$defs/query-string"
        },
        {
          "type": "string",
          "default": "legend",
          "pattern": "^legend([2-9]|[1-9][0-9]+)?$"
        }
      ]
    },
    "legendgrouptitle": {
      "type": "object",
      "properties": {
        "font": {
          "type": "object",
          "properties": {
            "color": {
              "oneOf": [
                {
                  "$ref": "#/$defs/query-string"
                },
                {
                  "$ref": "#/$defs/color"
                }
              ]
            },
            "family": {
              "pattern": ".*\\S.*$",
              "description": "HTML font family - the typeface that will be applied by the web browser. The web browser can only apply a font if it is available on the system where it runs. Provide multiple font families, separated by commas, to indicate the order in which to apply fonts if they aren't available.",
              "type": "string"
            },
            "lineposition": {
              "description": "Sets the kind of decoration line(s) with text, such as an *under*, *over* or *through* as well as combinations e.g. *under+over*, etc.",
              "oneOf": [
                {
                  "$ref": "#/$defs/query-string"
                },
                {
                  "oneOf": [
                    {
                      "type": "string",
                      "enum": [
                        "none"
                      ]
                    },
                    {
                      "type": "string",
                      "pattern": "^(under|over|through)(\\+(under|over|through))*$"
                    }
                  ],
                  "default": "none"
                }
              ]
            },
            "shadow": {
              "default": "none",
              "description": "Sets the shape and color of the shadow behind text. *auto* places minimal shadow and applies contrast text font color. See https://developer.mozilla.org/en-US/docs/Web/CSS/text-shadow for additional options.",
              "type": "string"
            },
            "size": {
              "oneOf": [
                {
                  "$ref": "#/$defs/query-string"
                },
                {
                  "type": "number",
                  "minimum": 1
                }
              ]
            },
            "style": {
              "description": "Sets whether a font should be styled with a normal or italic face from its family.",
              "oneOf": [
                {
                  "$ref": "#/$defs/query-string"
                },
                {
                  "enum": [
                    "normal",
                    "italic"
                  ],
                  "default": "normal"
                }
              ]
            },
            "textcase": {
              "description": "Sets capitalization of text. It can be used to make text appear in all-uppercase or all-lowercase, or with each word capitalized.",
              "oneOf": [
                {
                  "$ref": "#/$defs/query-string"
                },
                {
                  "enum": [
                    "normal",
                    "word caps",
                    "upper",
                    "lower"
                  ],
                  "default": "normal"
                }
              ]
            },
            "variant": {
              "description": "Sets the variant of the font.",
              "oneOf": [
                {
                  "$ref": "#/$defs/query-string"
                },
                {
                  "enum": [
                    "normal",
                    "small-caps",
                    "all-small-caps",
                    "all-petite-caps",
                    "petite-caps",
                    "unicase"
                  ],
                  "default": "normal"
                }
              ]
            },
            "weight": {
              "description": "Sets the weight (or boldness) of the font.",
              "oneOf": [
                {
                  "$ref": "#/$defs/query-string"
                },
                {
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 1000,
                  "default": "normal"
                }
              ]
            }
          },
          "additionalProperties": false
        },
        "text": {
          "default": "",
          "description": "Sets the title of the legend group.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "legendrank": {
      "description": "Sets the legend rank for this trace. Items and groups with smaller ranks are presented on top/left side while with *reversed* `legend.traceorder` they are on bottom/right side. The default legendrank is 1000, so that you can use ranks less than 1000 to place certain items before all unranked items, and ranks greater than 1000 to go after all unranked items. When having unranked or equal rank items shapes would be displayed after traces i.e. according to their order in data and layout.",
      "oneOf": [
        {
          "$ref": "#/$defs/query-string"
        },
        {
          "type": "number",
          "default": 1000
        }
      ]
    },
    "legendwidth": {
      "description": "Sets the width (in px or fraction) of the legend for this trace.",
      "oneOf": [
        {
          "$ref": "#/$defs/query-string"
        },
        {
          "type": "number",
          "minimum": 0
        }
      ]
    },
    "link": {
      "type": "object",
      "properties": {
        "arrowlen": {
          "description": "Sets the length (in px) of the links arrow, if 0 no arrow will be drawn.",
          "oneOf": [
            {
              "$ref": "#/$defs/query-string"
            },
            {
              "type": "number",
              "minimum": 0,
              "default": 0
            }
          ]
        },
        "color": {
          "description": "Sets the `link` color. It can be a single value, or an array for specifying color for each `link`. If `link.color` is omitted, then by default, a translucent grey link will be used.",
          "oneOf": [
            {
              "oneOf": [
                {
                  "$ref": "#/$defs/query-string"
                },
                {
                  "$ref": "#/$defs/color"
                }
              ]
            },
            {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "$ref": "#/$defs/query-string"
                  },
                  {
                    "$ref": "#/$defs/color"
                  }
                ]
              }
            }
          ]
        },
        "colorscales": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "cmax": {
                "description": "Sets the upper bound of the color domain.",
                "oneOf": [
                  {
                    "$ref": "#/$defs/query-string"
                  },
                  {
                    "type": "number",
                    "default": 1
                  }
                ]
              },
              "cmin": {
                "description": "Sets the lower bound of the color domain.",
                "oneOf": [
                  {
                    "$ref": "#/$defs/query-string"
                  },
                  {
                    "type": "number",
                    "default": 0
                  }
                ]
              },
              "colorscale": {
                "description": "Sets the colorscale. The colorscale must be an array containing arrays mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string. At minimum, a mapping for the lowest (0) and highest (1) values are required. For example, `[[0, 'rgb(0,0,255)'], [1, 'rgb(255,0,0)']]`. To control the bounds of the colorscale in color space, use `cmin` and `cmax`. Alternatively, `colorscale` may be a palette name string of the following list: Blackbody,Bluered,Blues,Cividis,Earth,Electric,Greens,Greys,Hot,Jet,Picnic,Portland,Rainbow,RdBu,Reds,Viridis,YlGnBu,YlOrRd.",
                "oneOf": [
                  {
                    "$ref": "#/$defs/query-string"
                  },
                  {
                    "$ref": "#/$defs/colorscale",
                    "default": [
                      [
                        0,
                        "white"
                      ],
                      [
                        1,
                        "black"
                      ]
                    ]
                  }
                ]
              },
              "label": {
                "default": "",
                "description": "The label of the links to color based on their concentration within a flow.",
                "type": "string"
              },
              "name": {
                "description": "When used in a template, named items are created in the output figure in addition to any items the figure already has in this array. You can modify these items in the output figure by making your own item with `templateitemname` matching this `name` alongside your modifications (including `visible: false` or `enabled: false` to hide it). Has no effect outside of a template.",
                "type": "string"
              },
              "templateitemname": {
                "description": "Used to refer to a named item in this array in the template. Named items from the template will be created even without a matching item in the input figure, but you can modify one by making an item with `templateitemname` matching its `name`, alongside your modifications (including `visible: false` or `enabled: false` to hide it). If there is no template or no matching item, this item will be hidden unless you explicitly show it with `visible: true`.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "minItems": 1
        },
        "colorsrc": {
          "description": "Sets the source reference on Chart Studio Cloud for `color`.",
          "type": "string"
        },
        "customdata": {
          "description": "Assigns extra data to each link.",
          "oneOf": [
            {
              "$ref": "#/$defs/query-string"
            },
            {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          ]
        },
        "customdatasrc": {
          "description": "Sets the source reference on Chart Studio Cloud for `customdata`.",
          "type": "string"
        },
        "hovercolor": {
          "description": "Sets the `link` hover color. It can be a single value, or an array for specifying hover colors for each `link`. If `link.hovercolor` is omitted, then by default, links will become slightly more opaque when hovered over.",
          "oneOf": [
            {
              "oneOf": [
                {
                  "$ref": "#/$defs/query-string"
                },
                {
                  "$ref": "#/$defs/color"
                }
              ]
            },
            {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "$ref": "#/$defs/query-string"
                  },
                  {
                    "$ref": "#/$defs/color"
                  }
                ]
              }
            }
          ]
        },
        "hovercolorsrc": {
          "description": "Sets the source reference on Chart Studio Cloud for `hovercolor`.",
          "type": "string"
        },
        "hoverinfo": {
          "description": "Determines which trace information appear when hovering links. If `none` or `skip` are set, no information is displayed upon hovering. But, if `none` is set, click and hover events are still fired.",
          "oneOf": [
            {
              "$ref": "#/$defs/query-string"
            },
            {
              "enum": [
                "all",
                "none",
                "skip"
              ],
              "default": "all"
            }
          ]
        },
        "hoverlabel": {
          "type": "object",
          "properties": {
            "align": {
              "description": "Sets the horizontal alignment of the text content within hover label box. Has an effect only if the hover label text spans more two or more lines",
              "oneOf": [
                {
                  "oneOf": [
                    {
                      "$ref": "#/$defs/query-string"
                    },
                    {
                      "enum": [
                        "left",
                        "right",
                        "auto"
                      ],
                      "default": "auto"
                    }
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/$defs/query-string"
                      },
                      {
                        "enum": [
                          "left",
                          "right",
                          "auto"
                        ],
                        "default": "auto"
                      }
                    ]
                  }
                }
              ]
            },
            "alignsrc": {
              "description": "Sets the source reference on Chart Studio Cloud for `align`.",
              "type": "string"
            },
            "bgcolor": {
              "description": "Sets the background color of the hover labels for this trace",
              "oneOf": [
                {
                  "oneOf": [
                    {
                      "$ref": "#/$defs/query-string"
                    },
                    {
                      "$ref": "#/$defs/color"
                    }
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/$defs/query-string"
                      },
                      {
                        "$ref": "#/$defs/color"
                      }
                    ]
                  }
                }
              ]
            },
            "bgcolorsrc": {
              "description": "Sets the source reference on Chart Studio Cloud for `bgcolor`.",
              "type": "string"
            },
            "bordercolor": {
              "description": "Sets the border color of the hover labels for this trace.",
              "oneOf": [
                {
                  "oneOf": [
                    {
                      "$ref": "#/$defs/query-string"
                    },
                    {
                      "$ref": "#/$defs/color"
                    }
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/$defs/query-string"
                      },
                      {
                        "$ref": "#/$defs/color"
                      }
                    ]
                  }
                }
              ]
            },
            "bordercolorsrc": {
              "description": "Sets the source reference on Chart Studio Cloud for `bordercolor`.",
              "type": "string"
            },
            "font": {
              "type": "object",
              "properties": {
                "color": {
                  "oneOf": [
                    {
                      "oneOf": [
                        {
                          "$ref": "#/$defs/query-string"
                        },
                        {
                          "$ref": "#/$defs/color"
                        }
                      ]
                    },
                    {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": "#/$defs/query-string"
                          },
                          {
                            "$ref": "#/$defs/color"
                          }
                        ]
                      }
                    }
                  ]
                },
                "colorsrc": {
                  "description": "Sets the source reference on Chart Studio Cloud for `color`.",
                  "type": "string"
                },
                "family": {
                  "description": "HTML font family - the typeface that will be applied by the web browser. The web browser can only apply a font if it is available on the system where it runs. Provide multiple font families, separated by commas, to indicate the order in which to apply fonts if they aren't available.",
                  "oneOf": [
                    {
                      "pattern": ".*\\S.*$",
                      "type": "string"
                    },
                    {
                      "type": "array",
                      "items": {
                        "pattern": ".*\\S.*$",
                        "type": "string"
                      }
                    },
                    {
                      "$ref": "#/$defs/query-string"
                    }
                  ]
                },
                "familysrc": {
                  "description": "Sets the source reference on Chart Studio Cloud for `family`.",
                  "type": "string"
                },
                "lineposition": {
                  "description": "Sets the kind of decoration line(s) with text, such as an *under*, *over* or *through* as well as combinations e.g. *under+over*, etc.",
                  "oneOf": [
                    {
                      "oneOf": [
                        {
                          "$ref": "#/$defs/query-string"
                        },
                        {
                          "oneOf": [
                            {
                              "type": "string",
                              "enum": [
                                "none"
                              ]
                            },
                            {
                              "type": "string",
                              "pattern": "^(under|over|through)(\\+(under|over|through))*$"
                            }
                          ],
                          "default": "none"
                        }
                      ]
                    },
                    {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": "#/$defs/query-string"
                          },
                          {
                            "oneOf": [
                              {
                                "type": "string",
                                "enum": [
                                  "none"
                                ]
                              },
                              {
                                "type": "string",
                                "pattern": "^(under|over|through)(\\+(under|over|through))*$"
                              }
                            ],
                            "default": "none"
                          }
                        ]
                      }
                    }
                  ]
                },
                "linepositionsrc": {
                  "description": "Sets the source reference on Chart Studio Cloud for `lineposition`.",
                  "type": "string"
                },
                "shadow": {
                  "description": "Sets the shape and color of the shadow behind text. *auto* places minimal shadow and applies contrast text font color. See https://developer.mozilla.org/en-US/docs/Web/CSS/text-shadow for additional options.",
                  "oneOf": [
                    {
                      "default": "none",
                      "type": "string"
                    },
                    {
                      "type": "array",
                      "items": {
                        "default": "none",
                        "type": "string"
                      }
                    }
                  ]
                },
                "shadowsrc": {
                  "description": "Sets the source reference on Chart Studio Cloud for `shadow`.",
                  "type": "string"
                },
                "size": {
                  "oneOf": [
                    {
                      "oneOf": [
                        {
                          "$ref": "#/$defs/query-string"
                        },
                        {
                          "type": "number",
                          "minimum": 1
                        }
                      ]
                    },
                    {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": "#/$defs/query-string"
                          },
                          {
                            "type": "number",
                            "minimum": 1
                          }
                        ]
                      }
                    }
                  ]
                },
                "sizesrc": {
                  "description": "Sets the source reference on Chart Studio Cloud for `size`.",
                  "type": "string"
                },
                "style": {
                  "description": "Sets whether a font should be styled with a normal or italic face from its family.",
                  "oneOf": [
                    {
                      "oneOf": [
                        {
                          "$ref": "#/$defs/query-string"
                        },
                        {
                          "enum": [
                            "normal",
                            "italic"
                          ],
                          "default": "normal"
                        }
                      ]
                    },
                    {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": "#/$defs/query-string"
                          },
                          {
                            "enum": [
                              "normal",
                              "italic"
                            ],
                            "default": "normal"
                          }
                        ]
                      }
                    }
                  ]
                },
                "stylesrc": {
                  "description": "Sets the source reference on Chart Studio Cloud for `style`.",
                  "type": "string"
                },
                "textcase": {
                  "description": "Sets capitalization of text. It can be used to make text appear in all-uppercase or all-lowercase, or with each word capitalized.",
                  "oneOf": [
                    {
                      "oneOf": [
                        {
                          "$ref": "#/$defs/query-string"
                        },
                        {
                          "enum": [
                            "normal",
                            "word caps",
                            "upper",
                            "lower"
                          ],
                          "default": "normal"
                        }
                      ]
                    },
                    {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": "#/$defs/query-string"
                          },
                          {
                            "enum": [
                              "normal",
                              "word caps",
                              "upper",
                              "lower"
                            ],
                            "default": "normal"
                          }
                        ]
                      }
                    }
                  ]
                },
                "textcasesrc": {
                  "description": "Sets the source reference on Chart Studio Cloud for `textcase`.",
                  "type": "string"
                },
                "variant": {
                  "description": "Sets the variant of the font.",
                  "oneOf": [
                    {
                      "oneOf": [
                        {
                          "$ref": "#/$defs/query-string"
                        },
                        {
                          "enum": [
                            "normal",
                            "small-caps",
                            "all-small-caps",
                            "all-petite-caps",
                            "petite-caps",
                            "unicase"
                          ],
                          "default": "normal"
                        }
                      ]
                    },
                    {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": "#/$defs/query-string"
                          },
                          {
                            "enum": [
                              "normal",
                              "small-caps",
                              "all-small-caps",
                              "all-petite-caps",
                              "petite-caps",
                              "unicase"
                            ],
                            "default": "normal"
                          }
                        ]
                      }
                    }
                  ]
                },
                "variantsrc": {
                  "description": "Sets the source reference on Chart Studio Cloud for `variant`.",
                  "type": "string"
                },
                "weight": {
                  "description": "Sets the weight (or boldness) of the font.",
                  "oneOf": [
                    {
                      "oneOf": [
                        {
                          "$ref": "#/$defs/query-string"
                        },
                        {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 1000,
                          "default": "normal"
                        }
                      ]
                    },
                    {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": "#/$defs/query-string"
                          },
                          {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 1000,
                            "default": "normal"
                          }
                        ]
                      }
                    }
                  ]
                },
                "weightsrc": {
                  "description": "Sets the source reference on Chart Studio Cloud for `weight`.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "namelength": {
              "description": "Sets the default length (in number of characters) of the trace name in the hover labels for all traces. -1 shows the whole name regardless of length. 0-3 shows the first 0-3 characters, and an integer >3 will show the whole name if it is less than that many characters, but if it is longer, will truncate to `namelength - 3` characters and add an ellipsis.",
              "oneOf": [
                {
                  "oneOf": [
                    {
                      "$ref": "#/$defs/query-string"
                    },
                    {
                      "type": "integer",
                      "minimum": -1,
                      "default": 15
                    }
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/$defs/query-string"
                      },
                      {
                        "type": "integer",
                        "minimum": -1,
                        "default": 15
                      }
                    ]
                  }
                }
              ]
            },
            "namelengthsrc": {
              "description": "Sets the source reference on Chart Studio Cloud for `namelength`.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "hovertemplate": {
          "description": "Template string used for rendering the information that appear on hover box. Note that this will override `hoverinfo`. Variables are inserted using %{variable}, for example \"y: %{y}\" as well as %{xother}, {%_xother}, {%_xother_}, {%xother_}. When showing info for several points, *xother* will be added to those with different x positions from the first point. An underscore before or after *(x|y)other* will add a space on that side, only when this field is shown. Numbers are formatted using d3-format's syntax %{variable:d3-format}, for example \"Price: %{y:$.2f}\". https://github.com/d3/d3-format/tree/v1.4.5#d3-format for details on the formatting syntax. Dates are formatted using d3-time-format's syntax %{variable|d3-time-format}, for example \"Day: %{2019-01-01|%A}\". https://github.com/d3/d3-time-format/tree/v2.2.3#locale_format for details on the date formatting syntax. The variables available in `hovertemplate` are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data. Additionally, every attributes that can be specified per-point (the ones that are `arrayOk: true`) are available.  Variables `source` and `target` are node objects.Finally, the template string has access to variables `value` and `label`. Anything contained in tag `<extra>` is displayed in the secondary box, for example \"<extra>{fullData.name}</extra>\". To hide the secondary box completely, use an empty tag `<extra></extra>`.",
          "oneOf": [
            {
              "default": "",
              "type": "string"
            },
            {
              "type": "array",
              "items": {
                "default": "",
                "type": "string"
              }
            }
          ]
        },
        "hovertemplatesrc": {
          "description": "Sets the source reference on Chart Studio Cloud for `hovertemplate`.",
          "type": "string"
        },
        "label": {
          "description": "The shown name of the link.",
          "oneOf": [
            {
              "$ref": "#/$defs/query-string"
            },
            {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "default": []
            }
          ]
        },
        "labelsrc": {
          "description": "Sets the source reference on Chart Studio Cloud for `label`.",
          "type": "string"
        },
        "line": {
          "type": "object",
          "properties": {
            "color": {
              "description": "Sets the color of the `line` around each `link`.",
              "oneOf": [
                {
                  "oneOf": [
                    {
                      "$ref": "#/$defs/query-string"
                    },
                    {
                      "$ref": "#/$defs/color"
                    }
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/$defs/query-string"
                      },
                      {
                        "$ref": "#/$defs/color"
                      }
                    ]
                  }
                }
              ]
            },
            "colorsrc": {
              "description": "Sets the source reference on Chart Studio Cloud for `color`.",
              "type": "string"
            },
            "width": {
              "description": "Sets the width (in px) of the `line` around each `link`.",
              "oneOf": [
                {
                  "oneOf": [
                    {
                      "$ref": "#/$defs/query-string"
                    },
                    {
                      "type": "number",
                      "minimum": 0,
                      "default": 0
                    }
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/$defs/query-string"
                      },
                      {
                        "type": "number",
                        "minimum": 0,
                        "default": 0
                      }
                    ]
                  }
                }
              ]
            },
            "widthsrc": {
              "description": "Sets the source reference on Chart Studio Cloud for `width`.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "source": {
          "description": "An integer number `[0..nodes.length - 1]` that represents the source node.",
          "oneOf": [
            {
              "$ref": "#/$defs/query-string"
            },
            {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "default": []
            }
          ]
        },
        "sourcesrc": {
          "description": "Sets the source reference on Chart Studio Cloud for `source`.",
          "type": "string"
        },
        "target": {
          "description": "An integer number `[0..nodes.length - 1]` that represents the target node.",
          "oneOf": [
            {
              "$ref": "#/$defs/query-string"
            },
            {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "default": []
            }
          ]
        },
        "targetsrc": {
          "description": "Sets the source reference on Chart Studio Cloud for `target`.",
          "type": "string"
        },
        "value": {
          "description": "A numeric value representing the flow volume value.",
          "oneOf": [
            {
              "$ref": "#/$defs/query-string"
            },
            {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "default": []
            }
          ]
        },
        "valuesrc": {
          "description": "Sets the source reference on Chart Studio Cloud for `value`.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "metasrc": {
      "description": "Sets the source reference on Chart Studio Cloud for `meta`.",
      "type": "string"
    },
    "name": {
      "description": "Sets the trace name. The trace name appears as the legend item and on hover.",
      "type": "string"
    },
    "node": {
      "type": "object",
      "properties": {
        "align": {
          "description": "Sets the alignment method used to position the nodes along the horizontal axis.",
          "oneOf": [
            {
              "$ref": "#/$defs/query-string"
            },
            {
              "enum": [
                "justify",
                "left",
                "right",
                "center"
              ],
              "default": "justify"
            }
          ]
        },
        "color": {
          "description": "Sets the `node` color. It can be a single value, or an array for specifying color for each `node`. If `node.color` is omitted, then the default `Plotly` color palette will be cycled through to have a variety of colors. These defaults are not fully opaque, to allow some visibility of what is beneath the node.",
          "oneOf": [
            {
              "oneOf": [
                {
                  "$ref": "#/$defs/query-string"
                },
                {
                  "$ref": "#/$defs/color"
                }
              ]
            },
            {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "$ref": "#/$defs/query-string"
                  },
                  {
                    "$ref": "#/$defs/color"
                  }
                ]
              }
            }
          ]
        },
        "colorsrc": {
          "description": "Sets the source reference on Chart Studio Cloud for `color`.",
          "type": "string"
        },
        "customdata": {
          "description": "Assigns extra data to each node.",
          "oneOf": [
            {
              "$ref": "#/$defs/query-string"
            },
            {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          ]
        },
        "customdatasrc": {
          "description": "Sets the source reference on Chart Studio Cloud for `customdata`.",
          "type": "string"
        },
        "groups": {
          "description": "Groups of nodes. Each group is defined by an array with the indices of the nodes it contains. Multiple groups can be specified.",
          "oneOf": [
            {
              "$ref": "#/$defs/query-string"
            },
            {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "$ref": "#/$defs/query-string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              "minItems": 1,
              "default": []
            }
          ]
        },
        "hoverinfo": {
          "description": "Determines which trace information appear when hovering nodes. If `none` or `skip` are set, no information is displayed upon hovering. But, if `none` is set, click and hover events are still fired.",
          "oneOf": [
            {
              "$ref": "#/$defs/query-string"
            },
            {
              "enum": [
                "all",
                "none",
                "skip"
              ],
              "default": "all"
            }
          ]
        },
        "hoverlabel": {
          "type": "object",
          "properties": {
            "align": {
              "description": "Sets the horizontal alignment of the text content within hover label box. Has an effect only if the hover label text spans more two or more lines",
              "oneOf": [
                {
                  "oneOf": [
                    {
                      "$ref": "#/$defs/query-string"
                    },
                    {
                      "enum": [
                        "left",
                        "right",
                        "auto"
                      ],
                      "default": "auto"
                    }
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/$defs/query-string"
                      },
                      {
                        "enum": [
                          "left",
                          "right",
                          "auto"
                        ],
                        "default": "auto"
                      }
                    ]
                  }
                }
              ]
            },
            "alignsrc": {
              "description": "Sets the source reference on Chart Studio Cloud for `align`.",
              "type": "string"
            },
            "bgcolor": {
              "description": "Sets the background color of the hover labels for this trace",
              "oneOf": [
                {
                  "oneOf": [
                    {
                      "$ref": "#/$defs/query-string"
                    },
                    {
                      "$ref": "#/$defs/color"
                    }
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/$defs/query-string"
                      },
                      {
                        "$ref": "#/$defs/color"
                      }
                    ]
                  }
                }
              ]
            },
            "bgcolorsrc": {
              "description": "Sets the source reference on Chart Studio Cloud for `bgcolor`.",
              "type": "string"
            },
            "bordercolor": {
              "description": "Sets the border color of the hover labels for this trace.",
              "oneOf": [
                {
                  "oneOf": [
                    {
                      "$ref": "#/$defs/query-string"
                    },
                    {
                      "$ref": "#/$defs/color"
                    }
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/$defs/query-string"
                      },
                      {
                        "$ref": "#/$defs/color"
                      }
                    ]
                  }
                }
              ]
            },
            "bordercolorsrc": {
              "description": "Sets the source reference on Chart Studio Cloud for `bordercolor`.",
              "type": "string"
            },
            "font": {
              "type": "object",
              "properties": {
                "color": {
                  "oneOf": [
                    {
                      "oneOf": [
                        {
                          "$ref": "#/$defs/query-string"
                        },
                        {
                          "$ref": "#/$defs/color"
                        }
                      ]
                    },
                    {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": "#/$defs/query-string"
                          },
                          {
                            "$ref": "#/$defs/color"
                          }
                        ]
                      }
                    }
                  ]
                },
                "colorsrc": {
                  "description": "Sets the source reference on Chart Studio Cloud for `color`.",
                  "type": "string"
                },
                "family": {
                  "description": "HTML font family - the typeface that will be applied by the web browser. The web browser can only apply a font if it is available on the system where it runs. Provide multiple font families, separated by commas, to indicate the order in which to apply fonts if they aren't available.",
                  "oneOf": [
                    {
                      "pattern": ".*\\S.*$",
                      "type": "string"
                    },
                    {
                      "type": "array",
                      "items": {
                        "pattern": ".*\\S.*$",
                        "type": "string"
                      }
                    },
                    {
                      "$ref": "#/$defs/query-string"
                    }
                  ]
                },
                "familysrc": {
                  "description": "Sets the source reference on Chart Studio Cloud for `family`.",
                  "type": "string"
                },
                "lineposition": {
                  "description": "Sets the kind of decoration line(s) with text, such as an *under*, *over* or *through* as well as combinations e.g. *under+over*, etc.",
                  "oneOf": [
                    {
                      "oneOf": [
                        {
                          "$ref": "#/$defs/query-string"
                        },
                        {
                          "oneOf": [
                            {
                              "type": "string",
                              "enum": [
                                "none"
                              ]
                            },
                            {
                              "type": "string",
                              "pattern": "^(under|over|through)(\\+(under|over|through))*$"
                            }
                          ],
                          "default": "none"
                        }
                      ]
                    },
                    {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": "#/$defs/query-string"
                          },
                          {
                            "oneOf": [
                              {
                                "type": "string",
                                "enum": [
                                  "none"
                                ]
                              },
                              {
                                "type": "string",
                                "pattern": "^(under|over|through)(\\+(under|over|through))*$"
                              }
                            ],
                            "default": "none"
                          }
                        ]
                      }
                    }
                  ]
                },
                "linepositionsrc": {
                  "description": "Sets the source reference on Chart Studio Cloud for `lineposition`.",
                  "type": "string"
                },
                "shadow": {
                  "description": "Sets the shape and color of the shadow behind text. *auto* places minimal shadow and applies contrast text font color. See https://developer.mozilla.org/en-US/docs/Web/CSS/text-shadow for additional options.",
                  "oneOf": [
                    {
                      "default": "none",
                      "type": "string"
                    },
                    {
                      "type": "array",
                      "items": {
                        "default": "none",
                        "type": "string"
                      }
                    }
                  ]
                },
                "shadowsrc": {
                  "description": "Sets the source reference on Chart Studio Cloud for `shadow`.",
                  "type": "string"
                },
                "size": {
                  "oneOf": [
                    {
                      "oneOf": [
                        {
                          "$ref": "#/$defs/query-string"
                        },
                        {
                          "type": "number",
                          "minimum": 1
                        }
                      ]
                    },
                    {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": "#/$defs/query-string"
                          },
                          {
                            "type": "number",
                            "minimum": 1
                          }
                        ]
                      }
                    }
                  ]
                },
                "sizesrc": {
                  "description": "Sets the source reference on Chart Studio Cloud for `size`.",
                  "type": "string"
                },
                "style": {
                  "description": "Sets whether a font should be styled with a normal or italic face from its family.",
                  "oneOf": [
                    {
                      "oneOf": [
                        {
                          "$ref": "#/$defs/query-string"
                        },
                        {
                          "enum": [
                            "normal",
                            "italic"
                          ],
                          "default": "normal"
                        }
                      ]
                    },
                    {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": "#/$defs/query-string"
                          },
                          {
                            "enum": [
                              "normal",
                              "italic"
                            ],
                            "default": "normal"
                          }
                        ]
                      }
                    }
                  ]
                },
                "stylesrc": {
                  "description": "Sets the source reference on Chart Studio Cloud for `style`.",
                  "type": "string"
                },
                "textcase": {
                  "description": "Sets capitalization of text. It can be used to make text appear in all-uppercase or all-lowercase, or with each word capitalized.",
                  "oneOf": [
                    {
                      "oneOf": [
                        {
                          "$ref": "#/$defs/query-string"
                        },
                        {
                          "enum": [
                            "normal",
                            "word caps",
                            "upper",
                            "lower"
                          ],
                          "default": "normal"
                        }
                      ]
                    },
                    {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": "#/$defs/query-string"
                          },
                          {
                            "enum": [
                              "normal",
                              "word caps",
                              "upper",
                              "lower"
                            ],
                            "default": "normal"
                          }
                        ]
                      }
                    }
                  ]
                },
                "textcasesrc": {
                  "description": "Sets the source reference on Chart Studio Cloud for `textcase`.",
                  "type": "string"
                },
                "variant": {
                  "description": "Sets the variant of the font.",
                  "oneOf": [
                    {
                      "oneOf": [
                        {
                          "$ref": "#/$defs/query-string"
                        },
                        {
                          "enum": [
                            "normal",
                            "small-caps",
                            "all-small-caps",
                            "all-petite-caps",
                            "petite-caps",
                            "unicase"
                          ],
                          "default": "normal"
                        }
                      ]
                    },
                    {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": "#/$defs/query-string"
                          },
                          {
                            "enum": [
                              "normal",
                              "small-caps",
                              "all-small-caps",
                              "all-petite-caps",
                              "petite-caps",
                              "unicase"
                            ],
                            "default": "normal"
                          }
                        ]
                      }
                    }
                  ]
                },
                "variantsrc": {
                  "description": "Sets the source reference on Chart Studio Cloud for `variant`.",
                  "type": "string"
                },
                "weight": {
                  "description": "Sets the weight (or boldness) of the font.",
                  "oneOf": [
                    {
                      "oneOf": [
                        {
                          "$ref": "#/$defs/query-string"
                        },
                        {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 1000,
                          "default": "normal"
                        }
                      ]
                    },
                    {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": "#/$defs/query-string"
                          },
                          {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 1000,
                            "default": "normal"
                          }
                        ]
                      }
                    }
                  ]
                },
                "weightsrc": {
                  "description": "Sets the source reference on Chart Studio Cloud for `weight`.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "namelength": {
              "description": "Sets the default length (in number of characters) of the trace name in the hover labels for all traces. -1 shows the whole name regardless of length. 0-3 shows the first 0-3 characters, and an integer >3 will show the whole name if it is less than that many characters, but if it is longer, will truncate to `namelength - 3` characters and add an ellipsis.",
              "oneOf": [
                {
                  "oneOf": [
                    {
                      "$ref": "#/$defs/query-string"
                    },
                    {
                      "type": "integer",
                      "minimum": -1,
                      "default": 15
                    }
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/$defs/query-string"
                      },
                      {
                        "type": "integer",
                        "minimum": -1,
                        "default": 15
                      }
                    ]
                  }
                }
              ]
            },
            "namelengthsrc": {
              "description": "Sets the source reference on Chart Studio Cloud for `namelength`.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "hovertemplate": {
          "description": "Template string used for rendering the information that appear on hover box. Note that this will override `hoverinfo`. Variables are inserted using %{variable}, for example \"y: %{y}\" as well as %{xother}, {%_xother}, {%_xother_}, {%xother_}. When showing info for several points, *xother* will be added to those with different x positions from the first point. An underscore before or after *(x|y)other* will add a space on that side, only when this field is shown. Numbers are formatted using d3-format's syntax %{variable:d3-format}, for example \"Price: %{y:$.2f}\". https://github.com/d3/d3-format/tree/v1.4.5#d3-format for details on the formatting syntax. Dates are formatted using d3-time-format's syntax %{variable|d3-time-format}, for example \"Day: %{2019-01-01|%A}\". https://github.com/d3/d3-time-format/tree/v2.2.3#locale_format for details on the date formatting syntax. The variables available in `hovertemplate` are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data. Additionally, every attributes that can be specified per-point (the ones that are `arrayOk: true`) are available.  Variables `sourceLinks` and `targetLinks` are arrays of link objects.Finally, the template string has access to variables `value` and `label`. Anything contained in tag `<extra>` is displayed in the secondary box, for example \"<extra>{fullData.name}</extra>\". To hide the secondary box completely, use an empty tag `<extra></extra>`.",
          "oneOf": [
            {
              "default": "",
              "type": "string"
            },
            {
              "type": "array",
              "items": {
                "default": "",
                "type": "string"
              }
            }
          ]
        },
        "hovertemplatesrc": {
          "description": "Sets the source reference on Chart Studio Cloud for `hovertemplate`.",
          "type": "string"
        },
        "label": {
          "description": "The shown name of the node.",
          "oneOf": [
            {
              "$ref": "#/$defs/query-string"
            },
            {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "default": []
            }
          ]
        },
        "labelsrc": {
          "description": "Sets the source reference on Chart Studio Cloud for `label`.",
          "type": "string"
        },
        "line": {
          "type": "object",
          "properties": {
            "color": {
              "description": "Sets the color of the `line` around each `node`.",
              "oneOf": [
                {
                  "oneOf": [
                    {
                      "$ref": "#/$defs/query-string"
                    },
                    {
                      "$ref": "#/$defs/color"
                    }
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/$defs/query-string"
                      },
                      {
                        "$ref": "#/$defs/color"
                      }
                    ]
                  }
                }
              ]
            },
            "colorsrc": {
              "description": "Sets the source reference on Chart Studio Cloud for `color`.",
              "type": "string"
            },
            "width": {
              "description": "Sets the width (in px) of the `line` around each `node`.",
              "oneOf": [
                {
                  "oneOf": [
                    {
                      "$ref": "#/$defs/query-string"
                    },
                    {
                      "type": "number",
                      "minimum": 0,
                      "default": 0.5
                    }
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/$defs/query-string"
                      },
                      {
                        "type": "number",
                        "minimum": 0,
                        "default": 0.5
                      }
                    ]
                  }
                }
              ]
            },
            "widthsrc": {
              "description": "Sets the source reference on Chart Studio Cloud for `width`.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "pad": {
          "description": "Sets the padding (in px) between the `nodes`.",
          "oneOf": [
            {
              "$ref": "#/$defs/query-string"
            },
            {
              "type": "number",
              "minimum": 0,
              "default": 20
            }
          ]
        },
        "thickness": {
          "description": "Sets the thickness (in px) of the `nodes`.",
          "oneOf": [
            {
              "$ref": "#/$defs/query-string"
            },
            {
              "type": "number",
              "minimum": 1,
              "default": 20
            }
          ]
        },
        "x": {
          "description": "The normalized horizontal position of the node.",
          "oneOf": [
            {
              "$ref": "#/$defs/query-string"
            },
            {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "default": []
            }
          ]
        },
        "xsrc": {
          "description": "Sets the source reference on Chart Studio Cloud for `x`.",
          "type": "string"
        },
        "y": {
          "description": "The normalized vertical position of the node.",
          "oneOf": [
            {
              "$ref": "#/$defs/query-string"
            },
            {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "default": []
            }
          ]
        },
        "ysrc": {
          "description": "Sets the source reference on Chart Studio Cloud for `y`.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "orientation": {
      "description": "Sets the orientation of the Sankey diagram.",
      "oneOf": [
        {
          "$ref": "#/$defs/query-string"
        },
        {
          "enum": [
            "v",
            "h"
          ],
          "default": "h"
        }
      ]
    },
    "selectedpoints": {
      "description": "Array containing integer indices of selected points. Has an effect only for traces that support selections. Note that an empty array means an empty selection where the `unselected` are turned on for all points, whereas, any other non-array values means no selection all where the `selected` and `unselected` styles have no effect."
    },
    "stream": {
      "type": "object",
      "properties": {
        "maxpoints": {
          "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot.",
          "oneOf": [
            {
              "$ref": "#/$defs/query-string"
            },
            {
              "type": "number",
              "minimum": 0,
              "maximum": 10000,
              "default": 500
            }
          ]
        },
        "token": {
          "pattern": ".*\\S.*$",
          "description": "The stream id number links a data trace on a plot with a stream. See https://chart-studio.plotly.com/settings for more details.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "textfont": {
      "type": "object",
      "properties": {
        "color": {
          "oneOf": [
            {
              "$ref": "#/$defs/query-string"
            },
            {
              "$ref": "#/$defs/color"
            }
          ]
        },
        "family": {
          "pattern": ".*\\S.*$",
          "description": "HTML font family - the typeface that will be applied by the web browser. The web browser can only apply a font if it is available on the system where it runs. Provide multiple font families, separated by commas, to indicate the order in which to apply fonts if they aren't available.",
          "type": "string"
        },
        "lineposition": {
          "description": "Sets the kind of decoration line(s) with text, such as an *under*, *over* or *through* as well as combinations e.g. *under+over*, etc.",
          "oneOf": [
            {
              "$ref": "#/$defs/query-string"
            },
            {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "none"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "^(under|over|through)(\\+(under|over|through))*$"
                }
              ],
              "default": "none"
            }
          ]
        },
        "shadow": {
          "default": "auto",
          "description": "Sets the shape and color of the shadow behind text. *auto* places minimal shadow and applies contrast text font color. See https://developer.mozilla.org/en-US/docs/Web/CSS/text-shadow for additional options.",
          "type": "string"
        },
        "size": {
          "oneOf": [
            {
              "$ref": "#/$defs/query-string"
            },
            {
              "type": "number",
              "minimum": 1
            }
          ]
        },
        "style": {
          "description": "Sets whether a font should be styled with a normal or italic face from its family.",
          "oneOf": [
            {
              "$ref": "#/$defs/query-string"
            },
            {
              "enum": [
                "normal",
                "italic"
              ],
              "default": "normal"
            }
          ]
        },
        "textcase": {
          "description": "Sets capitalization of text. It can be used to make text appear in all-uppercase or all-lowercase, or with each word capitalized.",
          "oneOf": [
            {
              "$ref": "#/$defs/query-string"
            },
            {
              "enum": [
                "normal",
                "word caps",
                "upper",
                "lower"
              ],
              "default": "normal"
            }
          ]
        },
        "variant": {
          "description": "Sets the variant of the font.",
          "oneOf": [
            {
              "$ref": "#/$defs/query-string"
            },
            {
              "enum": [
                "normal",
                "small-caps",
                "all-small-caps",
                "all-petite-caps",
                "petite-caps",
                "unicase"
              ],
              "default": "normal"
            }
          ]
        },
        "weight": {
          "description": "Sets the weight (or boldness) of the font.",
          "oneOf": [
            {
              "$ref": "#/$defs/query-string"
            },
            {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000,
              "default": "normal"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "uid": {
      "description": "Assign an id to this trace, Use this to provide object constancy between traces during animations and transitions.",
      "type": "string"
    },
    "uirevision": {
      "description": "Controls persistence of some user-driven changes to the trace: `constraintrange` in `parcoords` traces, as well as some `editable: true` modifications such as `name` and `colorbar.title`. Defaults to `layout.uirevision`. Note that other user-driven trace attribute changes are controlled by `layout` attributes: `trace.visible` is controlled by `layout.legend.uirevision`, `selectedpoints` is controlled by `layout.selectionrevision`, and `colorbar.(x|y)` (accessible with `config: {editable: true}`) is controlled by `layout.editrevision`. Trace changes are tracked by `uid`, which only falls back on trace index if no `uid` is provided. So if your app can add/remove traces before the end of the `data` array, such that the same trace has a different index, you can still preserve user-driven changes if you give each trace a `uid` that stays with it as it moves."
    },
    "valueformat": {
      "default": ".3s",
      "description": "Sets the value formatting rule using d3 formatting mini-languages which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/tree/v1.4.5#d3-format.",
      "type": "string"
    },
    "valuesuffix": {
      "default": "",
      "description": "Adds a unit to follow the value in the hover tooltip. Add a space if a separation is necessary from the value.",
      "type": "string"
    },
    "visible": {
      "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).",
      "oneOf": [
        {
          "$ref": "#/$defs/query-string"
        },
        {
          "enum": [
            true,
            false,
            "legendonly"
          ],
          "default": true
        }
      ]
    }
  },
  "required": [
    "type"
  ],
  "additionalProperties": false
}