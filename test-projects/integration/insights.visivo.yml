insights:
  # Simple scatter insight with basic props
  - name: simple-scatter-insight
    description: "Basic scatter plot showing x vs y from join_table"
    props:
      type: scatter
      mode: markers+lines
      x: ?{${ref(another_local_test_table).new_x}}
      y: ?{${ref(another_local_test_table).new_y}}
      marker:
        color: "#713B57"
        size: 10
      line:
        color: "#4F494C"
        width: 2
  - name: composite-scatter-insight
    props: 
      type: scatter 
      x: ?{${ref(another_local_test_table).new_x}}
      y: ?{${ref(composite_metric)}}


  # Bar chart insight with split interaction (replaces cohort_on)
  - name: fibonacci-split-insight
    description: "Bar chart with split based on y value threshold"
    props:
      type: bar
      x: ?{${ref(another_local_test_table).new_x}}
      y: ?{${ref(another_local_test_table).new_y}}
      marker:
        color: ?{ case when ${ref(another_local_test_table).new_x} >= 5 then '#713B57' else '#4F494C' end }
    interactions:
      - split: ?{ CASE WHEN ${ref(another_local_test_table).new_y} >= 6 THEN 'Normal Fibonacci' ELSE 'Abnormal Fib' END }
      - sort: ?{${ref(another_local_test_table).new_x} ASC}

  # Aggregated bar chart with filter
  - name: aggregated-bar-insight
    description: "Aggregated bar chart with conditional grouping"
    props:
      type: bar
      x: ?{ CASE WHEN ${ref(local_test_table).x} <= 3 THEN 'less' else 'More' END }
      y: ?{ avg(${ref(local_test_table).y}) }
      marker:
        color: ["rgb(142,124,195)", "rgba(204,204,204,1)"]
        line:
          color: ?{CASE WHEN ${ref(local_test_table).x} <= 3 THEN '#D25946' else '#191D33' END}
          width: 2.5

  # 3D scatter with filter interaction
  - name: 3d-scatter-insight
    description: "3D scatter plot with calculated z-axis"
    props:
      type: scatter3d
      x: ?{${ref(local_test_table).x}}
      y: ?{${ref(local_test_table).y}}
      z: ?{ -2*(${ref(local_test_table).x}/16)*${ref(local_test_table).x} + ${ref(local_test_table).x} + ${ref(local_test_table).y}*(${ref(local_test_table).y}-3)}
      mode: markers+lines
      marker:
        size: 8
        color: "#713B57"
    interactions:
      - filter: ?{${ref(local_test_table).x} > 1}
      - sort: ?{${ref(local_test_table).x} ASC}

  # Line chart with metric usage
  - name: metric-line-insight
    description: "Line chart using model-defined metrics"
    props:
      type: scatter
      mode: lines
      x: ?{${ref(local_test_table).x_rounded}}
      y: ?{${ref(local_test_table).x_sum}}
      line:
        color: "#D25946"
        shape: spline

  # ===== INPUT-DRIVEN INSIGHTS FOR TESTING =====

  # Test Split Interaction with Input
  - name: split-input-test-insight
    description: "Bar chart with dynamic split based on input threshold"
    props:
      type: bar
      x: ?{${ref(local_test_table).x}}
      y: ?{${ref(local_test_table).y}}
      marker:
        color: ?{ CASE WHEN ${ref(local_test_table).x} >= ${ref(split_threshold)} THEN '#713B57' ELSE '#D25946' END }
    interactions:
      - split: ?{ CASE WHEN ${ref(local_test_table).y} >= ${ref(split_threshold)} THEN 'High Y Values' ELSE 'Low Y Values' END }
      - sort: ?{${ref(local_test_table).x} ASC}

  # Test Non-Aggregate Filter with Input
  - name: filter-nonaggregate-input-test-insight
    description: "Scatter plot with dynamic non-aggregate filter"
    props:
      type: scatter
      mode: markers+lines
      x: ?{${ref(local_test_table).x}}
      y: ?{${ref(local_test_table).y}}
      marker:
        size: 10
        color: "#4F494C"
      line:
        color: "#713B57"
        width: 2
    interactions:
      - filter: ?{${ref(local_test_table).x} > ${ref(min_x_value)}}
      - sort: ?{${ref(local_test_table).x} ASC}

  # Test Aggregate Filter with Input
  - name: filter-aggregate-input-test-insight
    description: "Aggregated bar chart with dynamic aggregate filter (HAVING)"
    props:
      type: bar
      x: ?{ CASE WHEN ${ref(local_test_table).x} <= 3 THEN 'Group A' ELSE 'Group B' END }
      y: ?{ AVG(${ref(local_test_table).y}) }
      marker:
        color: ["#713B57", "#D25946"]
    interactions:
      - filter: ?{ AVG(${ref(local_test_table).y}) > ${ref(min_avg_y)} }

  # Test Sort Order with Input
  - name: sort-input-test-insight
    description: "Line chart with dynamic sort direction"
    props:
      type: scatter
      mode: lines+markers
      x: ?{${ref(another_local_test_table).new_x}}
      y: ?{${ref(another_local_test_table).new_y}}
      line:
        shape: spline
        color: "#191D33"
      marker:
        size: 8
        color: "#D25946"
    interactions:
      - sort: ?{${ref(another_local_test_table).new_x} ${ref(sort_direction)}}

  # Combined Test - All Interactions with Inputs
  - name: combined-interactions-test-insight
    description: "Chart testing split, filter, and sort together"
    props:
      type: bar
      x: ?{${ref(local_test_table).x}}
      y: ?{${ref(local_test_table).y}}
      marker:
        color: ?{ CASE WHEN ${ref(local_test_table).x} >= ${ref(split_threshold)} THEN '#713B57' ELSE '#4F494C' END }
    interactions:
      - split: ?{ CASE WHEN ${ref(local_test_table).y} >= ${ref(split_threshold)} THEN 'Above Threshold' ELSE 'Below Threshold' END }
      - filter: ?{${ref(local_test_table).x} > ${ref(min_x_value)}}
      - sort: ?{${ref(local_test_table).x} ${ref(sort_direction)}}
