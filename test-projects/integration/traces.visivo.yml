traces:
  - name: Example Indicator
    model: ref(csv)
    columns:
      x_data: x
    props:
      type: indicator
      value: column(x_data)[-1]
      delta:
        reference: column(x_data)[1]

  - name: Surface Trace
    model: ${ ref(local_test_table) }
    props:
      type: surface
      z:
        - ?{x*x+30}
        - ?{y*y+30}
        - ?{x*y*y+40}

  - name: Indicator Trace
    model: ${ ref(csv) }
    columns:
      x_data: x
      y_data: y
    props:
      type: "indicator"
      mode: "number+delta"
      value: column(y_data)[0]
      number:
        prefix: "$"
      delta:
        position: "top"
        reference: 320
      domain:
        x: [0, 1]
        y: [0, 1]

  - name: funnel trace
    model: ${ ref(test table) }
    order_by:
      - ?{x desc}
    props:
      type: funnel
      y: ?{ 'Position:' || x}
      x: ?{y}
      textinfo: "percent initial"
      marker:
        color: ?{ case when y >= 12 then '#713B57' else 'grey' end }
        opacity: .2
      textfont:
        color: "white"
        family: "Gravitas One"
        size: 38
      connector:
        fillcolor: "#edbdb5"

  - name: Aggregated Line
    model: ${ ref(test table) }
    props:
      type: bar
      x: ?{ CASE WHEN x <= 3 THEN 'less' else 'More' END }
      y: ?{ avg(y) }
      marker:
        color: ["rgb(142,124,195)", "rgba(204,204,204,1)"]
        line:
          color: ?{CASE WHEN x <= 3 THEN '#D25946' else '#191D33' END}
          width: 2.5
        pattern:
          shape: ["/", ""]
    tests:
      - assertions:
          - ">{ ${ref(Aggregated Line).props.marker.line.color[1]} == '#D25946' }"
          - ">{ ${ref(Aggregated Line).props.x[1]} == 'less' }"

  - name: Simple Line
    model: ${ ref(join_table) }
    cohort_on: ?{ CASE WHEN y >= 6 THEN 'Normal Fibonacci' ELSE 'Abnormal Fib' END }
    props:
      type: bar
      x: ?{x}
      y: ?{y}
      marker:
        color: ?{ case when x >= 5 then '#713B57' else 'grey' end }
        pattern:
          shape: ?{ case when x = 5 then '/' when x = 6 THEN 'x' else '' end }
        line:
          width: ?{ Case when x in (5,6) then 2.5 else null end}
    tests:
      - assertions:
          - ">{ ${ref(Simple Line).props.x[0]} == 5 }"
          - ">{ ${ref(Simple Line).props.y[0]} == 10 }"

  - name: 3d Line One
    model: ${ ref(test table) }
    order_by:
      - ?{x asc}
    props:
      type: scatter3d
      x: ?{x}
      y: ?{y}
      z: ?{ -2*(x/16)*x + x + y*(y-3)}
    tests:
      - assertions:
          - ">{ ${ref(3d Line One).props.x[1]} == 2 }"
          - ">{ ${ref(3d Line One).props.y[1]} == 1 }"

  - name: 3d Line Two
    model: ${ ref(test table) }
    order_by:
      - ?{x asc}
    filters:
      - ?{x>1}
    props:
      type: scatter3d
      x: ?{x}
      y: ?{y}
      z: ?{ (-3*(x/16)* 0.5*x + x + y*(y+2))+8 +3*x - 7*y}

  - name: Fibonacci Waterfall
    model: ${ ref(waterfall_model) }
    cohort_on: ?{ year}
    columns:
      x_data: category
      y_data: try_cast( replace(thousands_dollars, ',', '') as float ) * try_cast(sign as float)
      measure: waterfall
    props:
      type: waterfall
      base: 0
      measure: column(measure)
      x: column(x_data)
      y: column(y_data)
      text: ?{ cast(thousands_dollars as text) }
      increasing:
        marker:
          color: "#b97a9b"
      decreasing:
        marker:
          color: "#edbdb5"
    order_by:
      - ?{row asc}
    filters:
      - ?{ waterfall is not null }
      - ?{ category not in ('Earnings From Continuing Operations') }
      - ?{ year in ('Sep 2023', 'Sep 2022') }

  - name: QueryString Columns Test
    model: ${ ref(test table) }
    columns:
      x_col: x
      y_col: y
      color_col: case when x >= 5 then '#713B57' else '#999999' end
      size_col: case when y > 10 then 15 else 8 end
    props:
      type: scatter
      x: ?{ columns.x_col }
      y: ?{ columns.y_col }
      mode: markers
      marker:
        color: ?{ columns.color_col }
        size: ?{ columns.size_col }

