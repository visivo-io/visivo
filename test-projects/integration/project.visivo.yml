name: project

includes:
  - path: models.visivo.yml
  - path: traces.visivo.yml
  - path: visivo-io/example-include.git@main

defaults:
  target_name: local-sqlite
  alert_name: slack

alerts:
  - name: slack
    type: slack
    webhook_url: https://hooks.slack.com/services/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

targets:
  - name: local-sqlite
    database: local.db
    type: sqlite
  - name: local-postgres
    database: postgres
    type: postgresql
    host: localhost
    username: postgres
    password: "{{ env_var('PG_PASSWORD') }}"
    port: 5434
  - name: local-mysql
    database: visivo
    type: mysql
    host: localhost
    username: root
    password: "{{ env_var('MYSQL_PASSWORD') }}"
    port: 3306
  - name: remote-snowflake
    type: snowflake
    database: JARED_DEV
    account: bu13083.us-east-2.aws
    db_schema: DEFAULT
    username: "{{ env_var('CLI_UNIT_TESTING_SNOWFLAKE_USER') }}"
    warehouse: DEV
    password: "{{ env_var('CLI_UNIT_TESTING_SNOWFLAKE_PASSWORD') }}"
    role: PROD

charts:
  - name: indicator_chart
    traces:
      - ref(Indicator Trace)
  - name: surface-chart
    traces:
      - ref(Surface Trace)
    layout:
      title:
        text: Plot
      autosize: false
      width: 500
      height: 500
dashboards:
  - name: Table
    rows:
      - height: medium
        items:
          - width: 1
            markdown: |
              ## Sub heading
              1. Numbered
              1. Lists are cool

              But we can have lots of other _content_ as well
          - width: 3
            table:
              name: awesome-table
              column_defs:
                - trace_name: Fibonacci Waterfall
                  columns:
                    - key: "columns.x_data"
                    - key: "columns.y_data"
                      header: "y amount"
                      aggregation: 'sum'
                    - key: "columns.measure"
                    - key: "props.text"
              traces:
                - ref(Fibonacci Waterfall)
              rows_per_page: 1000
          - width: 2
            chart: ref(indicator_chart)

  - name: Simple Dashboard
    rows:
      - height: medium
        items:
          - width: 9
            chart:
              name: A very Fibonacci Waterfall
              traces:
                - "ref(Fibonacci Waterfall)"
                - ref(Example Indicator)
              layout:
                title:
                  text: "AAPL P&L"
                waterfallgroupgap: 0.1
          - width: 2
            chart:
              name: Aggregated Fib
              traces:
                - "ref(Aggregated Line)"
              layout:
                title:
                  text: "Aggregated Fibonacci"
                yaxis:
                  title:
                    text: "output"
                xaxis:
                  title:
                    text: "More if x>3 Less if x<=3"
      - height: medium
        items:
          - width: 3
            chart:
              name: fibonacci plane
              traces:
                - ref(3d Line One)
                - ref(3d Line Two)
              layout:
                title:
                  text: "The Greatest 3d Lines"
                legend:
                  orientation: "h"
                  yanchor: "bottom"
                  y: 1.02
                  xanchor: "right"
                  x: 1
          - width: 4
            chart:
              name: fibonacci
              traces:
                - "ref(Simple Line)"
              layout:
                title:
                  text: "A great fibonacci series"
                yaxis:
                  title:
                    text: "Output"
                xaxis:
                  title:
                    text: "Input"

          - width: 3
            chart:
              name: fibonacci times 2
              traces:
                - name: Double Simple Line
                  #cohort_on: "query('Fibonacci times 2')"
                  model:
                    sql: "SELECT x, y*2 as y FROM test_table"
                  props:
                    type: scatter
                    x: query(x)
                    y: query(y)
                    line:
                      shape: spline
                      color: "#4F494C"
                  order_by:
                    - query(x asc)
                  tests:
                    - logic: assert_that(Double Simple Line.props.x[2]).is_equal_to(3)
                - "ref(Simple Line)"
              layout:
                title:
                  text: "A not great fibonacci series"
                yaxis:
                  title:
                    text: "Output"
                xaxis:
                  title:
                    text: "Input"
      - height: medium
        items:
          - width: 2
            markdown: |
              # Here is the first
              1. Numbered
              1. List
          - width: 2
            chart:
              name: funnel chart
              traces:
                - "ref(funnel trace)"
              layout:
                title:
                  text: "Funnel Chart"
      - height: xlarge
        items:
          - chart: ref(surface-chart)
