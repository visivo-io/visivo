{"project_json": {"name": "project", "defaults": {"target_name": "sqlite"}, "cli_version": "1.0.19", "includes": [{"path": "dashboards/welcome.visivo.yml"}, {"path": "dashboards/charts.visivo.yml"}, {"path": "dashboards/models.visivo.yml"}], "alerts": [], "targets": [], "models": [], "traces": [], "tables": [], "charts": [], "dashboards": [{"name": "Welcome to Visivo", "rows": [{"height": "small", "items": [{"width": 1, "markdown": "# Welcome to Visivo \n\n#### This is a demo dashboard that contains some simple examples of common use cases.\n\nThese words were created using _markdown_ inside the dashboard directly and can be added to help your users understand the data they are looking at!\n"}]}, {"height": "medium", "items": [{"width": 1, "markdown": "### There are tons of different chart options to display your data.  \n\nEach [Chart](https://docs.visivo.io/reference/configuration/Chart/), can have many lines.  Each line is called a [Trace](https://docs.visivo.io/reference/configuration/Trace/).  Here is one with a [Waterfall Trace](https://docs.visivo.io/reference/configuration/Trace/Waterfall/).\n\nSome common options are:\n1. [Scatter (line)](https://docs.visivo.io/reference/configuration/Trace/Scatter/)\n1. [Bar](https://docs.visivo.io/reference/configuration/Trace/Bar/)\n1. [Indicator](https://docs.visivo.io/reference/configuration/Trace/Indicator/)\n"}, {"width": 2, "chart": {"name": "Fibonacci Waterfall Chart", "selector": {"name": "Fibonacci Waterfall Selector", "type": "single", "parent_name": "Fibonacci Waterfall Chart"}, "traces": [{"name": "Fibonacci Waterfall Trace", "changed": true, "model": {"name": "Waterfall Model", "table_name": "appl_pl", "args": ["curl", "-s", "https://raw.githubusercontent.com/visivo-io/visivo/main/test-projects/integration/data/aapl_pl.csv"]}, "cohort_on": "query(year)", "order_by": ["query(row asc)"], "filters": ["query( waterfall is not null )", "query( category not in ('Earnings From Continuing Operations') )", "query( year in ('Sep 2023', 'Sep 2022') )"], "columns": {"x_data": "category", "y_data": "cast( replace(thousands_dollars, ',', '') as float ) * cast(sign as float)", "measure": "waterfall"}, "props": {"type": "waterfall", "base": 0.0, "decreasing": {"marker": {"color": "#edbdb5"}}, "increasing": {"marker": {"color": "#b97a9b"}}, "measure": "column(measure)", "text": "query( cast(thousands_dollars as text) )", "x": "column(x_data)", "y": "column(y_data)"}}]}}]}, {"height": "medium", "items": [{"width": 1, "markdown": "### You can also display your data in a [Table](https://docs.visivo.io/reference/configuration/Table/)!\n\nThis is a useful way to break out your data for analysis.\n"}, {"width": 2, "table": {"name": "Fibonacci Waterfall Table", "selector": {"name": "Fibonacci Waterfall Selector", "type": "single", "parent_name": "Fibonacci Waterfall Chart"}, "traces": [{"name": "Fibonacci Waterfall Trace", "changed": true, "model": {"name": "Waterfall Model", "table_name": "appl_pl", "args": ["curl", "-s", "https://raw.githubusercontent.com/visivo-io/visivo/main/test-projects/integration/data/aapl_pl.csv"]}, "cohort_on": "query(year)", "order_by": ["query(row asc)"], "filters": ["query( waterfall is not null )", "query( category not in ('Earnings From Continuing Operations') )", "query( year in ('Sep 2023', 'Sep 2022') )"], "columns": {"x_data": "category", "y_data": "cast( replace(thousands_dollars, ',', '') as float ) * cast(sign as float)", "measure": "waterfall"}, "props": {"type": "waterfall", "base": 0.0, "decreasing": {"marker": {"color": "#edbdb5"}}, "increasing": {"marker": {"color": "#b97a9b"}}, "measure": "column(measure)", "text": "query( cast(thousands_dollars as text) )", "x": "column(x_data)", "y": "column(y_data)"}}], "column_defs": [{"trace_name": "Fibonacci Waterfall Trace", "columns": [{"header": "Widget Type", "key": "columns.x_data"}, {"header": "Widget Sales", "key": "columns.y_data"}, {"header": "Dollars", "key": "props.text"}]}]}}]}]}, {"name": "Chart Examples", "rows": [{"height": "small", "items": [{"width": 1, "markdown": "# Chart Examples\n\nThis dashboard contains example on some common chart types.\n"}]}, {"height": "medium", "items": [{"width": 1, "markdown": "# Bar\n"}, {"width": 1, "chart": {"selector": {"name": "None Selector", "type": "multiple", "parent_name": null}, "traces": [{"name": "Simple Bar", "changed": true, "model": {"name": "Echo CSV", "table_name": "csv", "args": ["echo", "x,y\n1,9\n2,1\n3,2\n4,3\n5,5\n6,8\n"]}, "props": {"type": "bar", "x": "query(x)", "y": "query(y)"}}]}}]}]}]}}