models:
  - name: Waterfall Model
    table_name: appl_pl
    args:
      - curl
      - -s
      - https://raw.githubusercontent.com/visivo-io/visivo/main/test-projects/integration/data/aapl_pl.csv

traces:
  - name: Fibonacci Waterfall Trace
    model: ref(Waterfall Model)
    columns: # Columns default to query
      x_data: category
      y_data: cast( replace(thousands_dollars, ',', '') as float ) * cast(sign as float)
      measure: waterfall
    props: # Props would default to static
      type: waterfall
      base: 0
      measure:
        column: measure
      x:
        column: x_data
      y:
        column: y_data
      text:
        query: cast(thousands_dollars as text)
      increasing:
        marker:
          color: "#b97a9b"
          # Equivalent to:
          # color:
          #   static: #b97a9b
      decreasing:
        marker:
          color: "#edbdb5"
    cohort_on: year # cohort defaults to query
    order_by: # defaults to query
      - row asc
    filters: # defaults to query
      - waterfall is not null # I think things can be query or static, and we have a default
      - query: category not in ('Earnings From Continuing Operations')
      - year in ('Sep 2023', 'Sep 2022')

dashboards:
  - name: Welcome to Visivo
    rows:
      - height: compact
        items:
          - markdown: |
              # Welcome to Visivo 

              #### This is a demo dashboard that contains some simple examples of common use cases.

              These words were created using _markdown_ inside the dashboard directly and can be added to help your users understand the data they are looking at!
      - height: medium
        items:
          - markdown: |
              ### There are tons of different chart options to display your data.  

              Each [Chart](https://docs.visivo.io/reference/configuration/Chart/), can have many lines.  Each line is called a [Trace](https://docs.visivo.io/reference/configuration/Trace/).  Here is one with a [Waterfall Trace](https://docs.visivo.io/reference/configuration/Trace/Waterfall/).

              Some common options are:
              1. [Scatter (line)](https://docs.visivo.io/reference/configuration/Trace/Scatter/)
              1. [Bar](https://docs.visivo.io/reference/configuration/Trace/Bar/)
              1. [Indicator](https://docs.visivo.io/reference/configuration/Trace/Indicator/)

          - width: 2
            chart:
              name: Fibonacci Waterfall Chart
              selector: Fibonacci Waterfall Selector
              traces:
                - Fibonacci Waterfall Trace
      - height: medium
        items:
          - markdown: |
              ### You can also display your data in a [Table](https://docs.visivo.io/reference/configuration/Table/)!

              This is a useful way to break out your data for analysis.
          - width: 2
            table:
              name: Fibonacci Waterfall Table
              selector: Fibonacci Waterfall Selector
              traces:
                - Fibonacci Waterfall Trace
              column_defs:
                - trace_name: Fibonacci Waterfall Trace
                  columns:
                    - header: Widget Type
                      key: columns.x_data
                    - header: Widget Sales
                      key: columns.y_data
                    - header: Dollars
                      key: props.text
      - height: small
        items:
          - width: 2
            markdown: |
              ### Link your charts and tables together

              A _selector_ allows you define which data is shown.  Change this selector and watch the table and chart above change.

          - selector:
              name: Fibonacci Waterfall Selector
              type: single
              options:
                - Fibonacci Waterfall Trace
