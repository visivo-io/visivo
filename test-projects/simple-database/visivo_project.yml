name: project

includes:
  - path: models.yml
  - path: visivo-io/example-include.git@main

defaults:
  target_name: local-sqlite
  alert_name: slack

alerts:
  - name: slack
    type: slack
    webhook_url: https://hooks.slack.com/services/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

targets:
  - name: local-sqlite
    database: target/local.db
    type: sqlite
  - name: local-postgres
    database: postgres
    type: postgresql
    username: postgres
    password: postgres
    port: 5434
  - name: remote-snowflake
    type: snowflake
    database: JARED_DEV
    account: bu13083.us-east-2.aws
    db_schema: DEFAULT
    username: {{ env_var('CLI_UNIT_TESTING_SNOWFLAKE_USER') }}
    warehouse: DEV
    password: {{ env_var('CLI_UNIT_TESTING_SNOWFLAKE_PASSWORD') }}

models:
  - name: test table local
    sql: "SELECT * FROM test_table" 

  - name: waterfall_model
    sql: | 
      SELECT * FROM (
        SELECT 
          'y*3+1' as grouping,
          CASE WHEN x%2=1 THEN y*3+1 ELSE -y END as y, 
          x as week_day 
        FROM test_table 
        UNION ALL 
        SELECT 
          'y*2+2' as grouping,
          CASE WHEN x%2=1 THEN y*2+2 ELSE -y END as y, 
          x as week_day 
        FROM test_table WHERE x between 0 and 6) a
        ORDER BY week_day asc , grouping 

traces:
  - name: example_indicator
    model: ref(test table)
    columns:
      x_data: x    
    props:
      type: indicator
      value: column(x_data)[0]
      delta:
        reference: column(x_data)[1]
  - name: Indicator Trace 
    model: ref(test table)
    columns:
      x_data: x
      y_data: y
    props: 
      type: "indicator"
      mode: "number+delta"
      value: column(x_data)[0]
      number:
        prefix: "$" 
      delta: 
        position: "top"
        reference: 320 
      domain: 
        x: [0, 1]
        y: [0, 1]

  - name: funnel trace
    model: ref(test table)
    order_by:
        - query(x desc)
    props:
      type: funnel
      y: query( 'Position:' || x)
      x: query(y)
      textinfo: "percent initial"
      marker:
        color: query( case when y >= 12 then '#713B57' else 'grey' end ) 
        opacity: .2
      textfont:
        color: 'white'
        family: 'Gravitas One'
        size: 38
      connector:
        fillcolor: '#edbdb5'


  - name: Aggregated Line
    model: ref(test table)
    props:
      type: bar 
      x: query( CASE WHEN x <= 3 THEN 'less' else 'More' END )
      y: query( avg(y) )
      marker:
        color: ['rgb(142,124,195)', 'rgba(204,204,204,1)']
        line:
          color: query(CASE WHEN x <= 3 THEN '#D25946' else '#191D33' END)
          width: 2.5
        pattern:
          shape: ['/','']
    tests:
      - coordinate_exists:
          coordinates:
            props.marker.line.color: '#D25946'
            props.x: 'less'

  - name: Simple Line
    model: ref(test table)
    cohort_on: query( CASE WHEN y >= 6 THEN 'Normal Fibonacci' ELSE 'Abnormal Fib' END )
    props:
      type: bar
      x: query(x)
      y: query(y)
      marker:
        color: query( case when x >= 5 then '#713B57' else 'grey' end ) 
        pattern:
          shape: query( case when x = 5 then '/' when x = 6 THEN 'x' else '' end )
        line: 
          width: query( Case when x in (5,6) then 2.5 else null end)
    tests:
      - coordinate_exists:
          coordinates:
            props.x: 2
            props.y: 1
  - name: 3d Line One
    model: ref(test table)
    cohort_on: "'Line 1'"
    order_by:
      - query(x asc)
    props:
      type: scatter3d
      x: query(x)
      y: query(y)
      z: query( -2*(x%2)*x + x + y*(y-3)) 
    tests:
      - coordinate_exists:
          coordinates:
            props.x: 2
            props.y: 1
      - not_null:
          attributes:
            - props.x
            - props.y
  - name: 3d Line Two
    model: ref(test table)
    cohort_on: "'Line Two'"
    order_by:
      - query(x asc)
    filters:
      - query(x>1)
    props:
      type: scatter3d
      x: query(x)
      y: query(y)
      z: query( (-3*(x%2)* 0.5*x + x + y*(y+2))+8 +3*x - 7*y)
   
  - name: Fibonacci Waterfall
    model: ref(waterfall_model)
    cohort_on: query(grouping)
    columns:
      x_data: week_day
      y_data: y
    props:
      type: waterfall
      measure: query('relative')
      x: column(x_data)
      y: column(y_data)
      text: query(cast(y as text))
      increasing:
        marker:
          color: '#b97a9b'
      decreasing:
        marker:
          color: '#edbdb5' 
    order_by:
      - query(week_day asc)

charts:
  - name: indicator_chart
    traces: 
      - ref(Indicator Trace)

dashboards:
  - name: Table
    rows:
      - height: medium
        items:
          - width: 1
            markdown: |
              ## Sub heading
              1. Numbered
              1. Lists are cool
              
              But we can have lots of other _content_ as well
          - width: 3
            table: 
              name: awesome-table
              trace: ref(Fibonacci Waterfall)
              columns:
                - header: Widget Type
                  column: x_data
                - header: Widget Sales
                  column: y_data
          - width: 2 
            chart: ref(indicator_chart)

  - name: Simple Dashboard
    rows:
      - height: medium
        items:
          - width: 9
            chart:
              name: A very Fibonacci Waterfall
              traces:
                - 'ref(Fibonacci Waterfall)'
                - ref(example_indicator)
              layout:
                title: 'A Great Fibonacci Waterfall'
          - width: 2
            chart: 
              name: Aggregated Fib 
              traces:
                - 'ref(Aggregated Line)'
              layout:
                title: 'Aggregated Fibonacci'
                yaxis: 
                  title: 'output'
                xaxis:
                  title: 'More if x>3 Less if x<=3'
                stack: False
      - height: medium
        items:
          - width: 3
            chart:
              name: fibonacci plane
              traces:
                - ref(3d Line One)
                - ref(3d Line Two)
              layout:
                title: 'The Greatest 3d Lines'
                legend:
                  orientation: "h"
                  yanchor: "bottom"
                  y: 1.02
                  xanchor: "right"
                  x: 1
          - width: 4
            chart: 
              name: fibonacci 
              traces:
                - 'ref(Simple Line)'
              layout:
                title: 'A great fibonacci series'
                yaxis: 
                  title: 'Output'
                xaxis:
                  title: 'Input'
                stack: False
          
          - width: 3
            chart: 
              name: fibonacci times 2
              traces:
                - name: Double Simple Line
                  cohort_on: "query('Fibonacci times 2')"
                  model:
                    sql: "SELECT x, y*2 as y FROM test_table" 
                  props:
                    type: scatter 
                    x: query(x)
                    y: query(y)
                    line:
                      shape: spline
                      color: "#4F494C"
                  order_by:
                    - query(x asc)
                  tests:
                    - coordinate_exists:
                        coordinates:
                          props.x: 2
                          props.y: 1
                - 'ref(Simple Line)'
              layout:
                title: 'A not great fibonacci series'
                yaxis: 
                  title: 'Output'
                xaxis:
                  title: 'Input'
                stack: False
      - height: medium
        items: 
          - width: 2
            markdown: |
              # Here is the first
              1. Numbered
              1. List
          - width: 2
            chart: 
              name: funnel chart
              traces:
                - 'ref(funnel trace)'
              layout:
                title: 'Funnel Chart'
            
